// Generated by Apple Swift version 3.1 (swiftlang-802.0.53 clang-802.0.42)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if defined(__has_attribute) && __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import CoreGraphics;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class UIScrollView;
@class NSCoder;

SWIFT_CLASS("_TtC15ESPullToRefresh18ESRefreshComponent")
@interface ESRefreshComponent : UIView
@property (nonatomic, weak) UIScrollView * _Nullable scrollView;
/// @param handler Refresh callback method
@property (nonatomic, copy) void (^ _Nullable handler)(void);
@property (nonatomic, readonly) BOOL isRefreshing;
@property (nonatomic, readonly) BOOL isAutoRefreshing;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame handler:(void (^ _Nonnull)(void))handler;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)willMoveToSuperview:(UIView * _Nullable)newSuperview;
- (void)didMoveToSuperview;
@end


@interface ESRefreshComponent (SWIFT_EXTENSION(ESPullToRefresh))
- (void)startRefreshingWithIsAuto:(BOOL)isAuto;
- (void)stopRefreshing;
- (void)start;
- (void)stop;
- (void)sizeChangeActionWithObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change;
- (void)offsetChangeActionWithObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change;
@end


@interface ESRefreshComponent (SWIFT_EXTENSION(ESPullToRefresh))
- (void)ignoreObserver:(BOOL)ignore;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
@end


SWIFT_CLASS("_TtC15ESPullToRefresh23ESRefreshFooterAnimator")
@interface ESRefreshFooterAnimator : UIView
@property (nonatomic, copy) NSString * _Nonnull loadingMoreDescription;
@property (nonatomic, copy) NSString * _Nonnull noMoreDataDescription;
@property (nonatomic, copy) NSString * _Nonnull loadingDescription;
@property (nonatomic, readonly, strong) UIView * _Nonnull view;
@property (nonatomic) NSTimeInterval duration;
@property (nonatomic) UIEdgeInsets insets;
@property (nonatomic) CGFloat trigger;
@property (nonatomic) CGFloat executeIncremental;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)refreshAnimationBeginWithView:(ESRefreshComponent * _Nonnull)view;
- (void)refreshAnimationEndWithView:(ESRefreshComponent * _Nonnull)view;
- (void)refreshWithView:(ESRefreshComponent * _Nonnull)view progressDidChange:(CGFloat)progress;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC15ESPullToRefresh19ESRefreshFooterView")
@interface ESRefreshFooterView : ESRefreshComponent
@property (nonatomic) BOOL noMoreData;
@property (nonatomic, getter=isHidden) BOOL hidden;
- (nonnull instancetype)initWithFrame:(CGRect)frame handler:(void (^ _Nonnull)(void))handler;
- (void)willMoveToSuperview:(UIView * _Nullable)newSuperview;
/// In didMoveToSuperview, it will cache superview(UIScrollView)‘s contentInset and update self’s frame.
/// It called ESRefreshComponent’s didMoveToSuperview.
- (void)didMoveToSuperview;
- (void)sizeChangeActionWithObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change;
- (void)offsetChangeActionWithObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change;
- (void)start;
- (void)stop;
/// Change to no-more-data status.
- (void)noticeNoMoreData;
/// Reset no-more-data status.
- (void)resetNoMoreData;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15ESPullToRefresh23ESRefreshHeaderAnimator")
@interface ESRefreshHeaderAnimator : UIView
@property (nonatomic, copy) NSString * _Nonnull pullToRefreshDescription;
@property (nonatomic, copy) NSString * _Nonnull releaseToRefreshDescription;
@property (nonatomic, copy) NSString * _Nonnull loadingDescription;
@property (nonatomic, readonly, strong) UIView * _Nonnull view;
@property (nonatomic) UIEdgeInsets insets;
@property (nonatomic) CGFloat trigger;
@property (nonatomic) CGFloat executeIncremental;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)refreshAnimationBeginWithView:(ESRefreshComponent * _Nonnull)view;
- (void)refreshAnimationEndWithView:(ESRefreshComponent * _Nonnull)view;
- (void)refreshWithView:(ESRefreshComponent * _Nonnull)view progressDidChange:(CGFloat)progress;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC15ESPullToRefresh19ESRefreshHeaderView")
@interface ESRefreshHeaderView : ESRefreshComponent
@property (nonatomic, copy) NSString * _Nullable refreshIdentifier;
- (nonnull instancetype)initWithFrame:(CGRect)frame handler:(void (^ _Nonnull)(void))handler;
- (void)willMoveToSuperview:(UIView * _Nullable)newSuperview;
- (void)didMoveToSuperview;
- (void)offsetChangeActionWithObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change;
- (void)start;
- (void)stop;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface UIScrollView (SWIFT_EXTENSION(ESPullToRefresh))
/// Identifier for cache expried timeinterval and last refresh date.
@property (nonatomic, copy) NSString * _Nullable refreshIdentifier;
/// If you setted refreshIdentifier and expriedTimeInterval, return nearest refresh expried or not. Default is false.
@property (nonatomic, readonly) BOOL expried;
/// Auto cached last refresh date when you setted refreshIdentifier.
@property (nonatomic, readonly, copy) NSDate * _Nullable lastRefreshDate;
@end


@interface UIScrollView (SWIFT_EXTENSION(ESPullToRefresh))
/// Pull-to-refresh associated property
@property (nonatomic, strong) ESRefreshHeaderView * _Nullable es_header;
/// Infinitiy scroll associated property
@property (nonatomic, strong) ESRefreshFooterView * _Nullable es_footer;
/// Add pull-to-refresh
- (ESRefreshHeaderView * _Nonnull)es_addPullToRefreshWithHandler:(void (^ _Nonnull)(void))handler;
/// Add infinite-scrolling
- (ESRefreshFooterView * _Nonnull)es_addInfiniteScrollingWithHandler:(void (^ _Nonnull)(void))handler;
/// Remove
- (void)es_removeRefreshHeader;
- (void)es_removeRefreshFooter;
/// Manual refresh
- (void)es_startPullToRefresh;
/// Auto refresh if expried.
- (void)es_autoPullToRefresh;
/// Stop pull to refresh
- (void)es_stopPullToRefreshWithIgnoreDate:(BOOL)ignoreDate ignoreFooter:(BOOL)ignoreFooter;
/// Footer notice method
- (void)es_noticeNoMoreData;
- (void)es_resetNoMoreData;
- (void)es_stopLoadingMore;
@end

#pragma clang diagnostic pop
